---
 - name: Implementation of multiple modules
   hosts: webserver
   become: yes
   vars:
    boolvar: true
    num1: 98
    num2: 67.5
    tech_name: 'Ansible Playbook'
    webservers:
     'Linux' : 'httpd'
     'Ubuntu' : 'apache2'
    formath: [4,5,8,9,13,67]

   vars_prompt:
    - name: yesNo
      prompt: Did you like this playbook
      private: no
    - name: number
      prompt: Enter a number(although it will be stored and string and then the playbook will convert it into a number)
      private: no
   
   vars_files:
     - var1.yml
     - var2.json

   
   tasks:

   - name: Install multiple packages using yum
     yum:
       name: "{{packges}}"
       state: present
     when: "ansible_distribution != 'Ubuntu'"
     notify: Starting httpd service
     tags:
       - httpdinstall
       - always

   - name: Install multiple packages using yum from passed file
     yum:
       name: "{{softwares}}"
       state: "{{reqStatus}}"
     when: "ansible_distribution == 'Amazon'"    

   - name: Install multiple packages using yum from passed file
     yum:
       name: "{{item}}"
       state: "absent"
     loop:
       - git
       - docker
     tags:
        -never

   - name: Starting httpd service
     service:
       name: httpd
       state: started
     register: httpd_status
     tags:
       - starthttpd
       - always

   - set_fact:
      tomcatstatus: "{{httpd_status}}"

   - name: Backup this playbook on webserver
     file:
       path: /etc/ansible/playbook_backup
       state: directory
       mode: '0755'

   - name: Copying the file on webserver
     copy:
       src: ./FullModulesPlaybook1.yml
       dest: /etc/ansible/playbook_backup/
       mode: '0755'
     when: "'./testing.yml' is file"
     # this when condition is tested on webserver hence it fails

   - name: Printing messages
     debug:
       var: inventory_hostname
     when: z is undefined
     # test operator run this task only when z is undefined

   - debug:
       var: packges[0]

   - debug:
       var: packges[1]
     when: a is defined
     # run this only when variable a is defined

   - debug:
       var: packges

   - debug:
       msg:
        - "webservers.keys() {{webservers.keys()}} \n webservers['Linux'] {{webservers['Linux']}} \n webservers.get('Ubuntu') {{webservers.get('Ubuntu')}}"
        - "The following packages have been installed {{packges}}"
        - "System Ready to Use : {{boolvar}} {{boolvar|type_debug}}"
        - "The sum of {{num1}} {{num1|type_debug}} and {{num2}} {{num2|type_debug}} is {{num1+num2}}"
        - "Did you like this playbook? {{yesNo|lower}} "
        - "{{ansible_system}} and {{ansible_distribution}} Host for this command is {{inventory_hostname}}" 
       #- "and details all the servers in hosts file are in {{hostvars}}"
       #- "{{hostvars[inventory_hostname]}} Gives the complete details of the hosts in this playbook"
        - "{{tech_name|upper}} by {{myName|title}} my first name is {{myName.split()}}"
        - "From var2 {{x}} and {{r}}"
        - "From command line a= {{a}} b={{b}} c={{c}} d={{d}} "
        - "Displaying the number you entered {{number|int}}"
        - "Max in formath {{formath|max}} min in formath {{formath|min}} logical operators a<b or b>c {{a<b or b>c}}"
        - "is num1 =num2 : {{num1 ==num2}} is num1 < num2 {{num1<num2}} is num1 >= num2 {{num1>=num2}} larger number is {{a if(a>num1) else num1}}"
        - "is 13 in formath {{13 in formath}} is 16 not in formath {{16 not in formath}}"
        - "httpd_status {{httpd_status}}, tomcatstatus {{tomcatstatus}}"   
